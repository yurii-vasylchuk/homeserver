- name: Create namespace argocd
  ansible.builtin.shell: kubectl get ns argocd || kubectl create ns argocd
  become: true
  become_user: ubuntu
  args:
    executable: /bin/bash

- name: Install Argo CD
  ansible.builtin.shell: >
    kubectl apply -k {{ temp_path }}/argocd
  become: true
  become_user: ubuntu
  args:
    executable: /bin/bash

- name: Apply traefik routes manifest for ArgoCD
  become: true
  become_user: ubuntu
  ansible.builtin.shell: |
    kubectl apply -n argocd -f {{ temp_path }}/argocd/argocd-dashboard-route.yaml
  args:
    executable: /bin/bash

- name: Wait until at least one argocd-server pod is Ready
  ansible.builtin.shell: |
    kubectl -n argocd wait --for=condition=Ready pod -l app.kubernetes.io/name=argocd-server --timeout=180s
  args:
    executable: /bin/bash
  become: true
  become_user: ubuntu

- name: Get ArgoCD initial admin password
  ansible.builtin.shell: |
    kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode
  register: argocd_admin_password_raw
  args:
    executable: /bin/bash
  become: true
  become_user: ubuntu

- name: Show ArgoCD initial admin password
  ansible.builtin.debug:
    msg: "ArgoCD initial admin password is: {{ argocd_admin_password_raw.stdout }}"

- name: Render ArgoCD Root application manifest
  ansible.builtin.template:
    src: "files/argocd/root-template.yml"
    dest: "{{ temp_path }}/argocd/root.yml"
    mode: "0644"

- name: Deploy ArgoCD Root application
  become: true
  become_user: ubuntu
  ansible.builtin.shell: |
    kubectl apply -f {{ temp_path }}/argocd/root.yml
  args:
    executable: /bin/bash
