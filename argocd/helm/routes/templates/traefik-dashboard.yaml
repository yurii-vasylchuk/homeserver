apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: traefik-auth-redirect
  namespace: kube-system
spec:
  forwardAuth:
    address: "https://auth.yuriivasylchuk.org.ua?rd=https://traefik.yuriivasylchuk.org.ua"
    trustForwardHeader: true
    authResponseHeaders:
      - X-Auth-Request-Access-Token
      - Authorization

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-ingressroute
  namespace: kube-system
spec:
  entryPoints:
    - websecure
  routes:
    - match: "Host(`traefik.yuriivasylchuk.org.ua`) && PathPrefix(`/`)"
      kind: Rule
      services:
        - name: traefik
          port: 8080
      middlewares:
        - name: traefik-auth-redirect
          namespace: kube-system
  tls:
    certResolver: letsencrypt

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-auth-ingressroute
  namespace: kube-system
spec:
  entryPoints:
    - websecure
  routes:
    - match: "Host(`traefik.yuriivasylchuk.org.ua`) && PathPrefix(`/oauth2/`)"
      kind: Rule
      middlewares:
        - name: auth-headers
          namespace: keycloak
      services:
        - name: oauth2-proxy
          namespace: keycloak
          port: 80
  tls:
    certResolver: letsencrypt

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: redirect-http
  namespace: argocd
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`traefik.yuriivasylchuk.org.ua`)
      kind: Rule
      middlewares:
        - name: redirect-to-https
          namespace: kube-system
      services:
        - name: noop-svc
          namespace: kube-system
          port: 80
